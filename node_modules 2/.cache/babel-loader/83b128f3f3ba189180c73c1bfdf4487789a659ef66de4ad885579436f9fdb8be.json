{"ast":null,"code":"var _jsxFileName = \"/Users/pks.ml/Desktop/GiftApp/gift.me/src/App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\n// import './App.css';\nimport { Flex, Container } from '@radix-ui/themes';\nimport Auth from './components/auth/Auth';\nimport Signup from './components/auth/signup/Signup';\nimport { BrowserRouter, Routes, Route, Link, Navigate } from 'react-router-dom';\nimport Login from './components/auth/login/Login';\nimport Home from './components/home/Home';\nimport ListGroup from './components/listGroup/ListGroup';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState('');\n\n  // Initialize the isLoggedIn state as false (user is not logged in)\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(initializeToken, []);\n  function initializeToken() {\n    setToken(localStorage.token);\n    // console.log('TOKEN:', localStorage.token);\n\n    // Set the isLoggedIn state based on the presence of the token\n    setIsLoggedIn(!!localStorage.token);\n  }\n  function updateToken(newToken) {\n    setToken(newToken);\n    localStorage.token = newToken;\n\n    // Set the isLoggedIn state to true when a token is updated (user is logged in)\n    setIsLoggedIn(true);\n  }\n  function clearToken() {\n    setToken(''); // Clear the token when logging out\n    localStorage.removeItem('token'); // Remove the token from local storage\n\n    // Set the isLoggedIn state to false when the user logs out\n    setIsLoggedIn(false);\n  }\n  function initializeUser() {}\n  function updateUser() {}\n  function clearUser() {}\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Home\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          loggedIn: isLoggedIn,\n          token: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"Signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {\n          setToken: updateToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"Login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          setToken: updateToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"List\",\n        element: /*#__PURE__*/_jsxDEV(ListGroup, {\n          setToken: updateToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"opWcZIdIrevpR97nRU3m93g9Eso=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Flex","Container","Auth","Signup","BrowserRouter","Routes","Route","Link","Navigate","Login","Home","ListGroup","useState","useEffect","jsxDEV","_jsxDEV","App","_s","token","setToken","isLoggedIn","setIsLoggedIn","initializeToken","localStorage","updateToken","newToken","clearToken","removeItem","initializeUser","updateUser","clearUser","children","path","element","loggedIn","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pks.ml/Desktop/GiftApp/gift.me/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\n// import './App.css';\nimport { Flex, Container } from '@radix-ui/themes';\nimport Auth from './components/auth/Auth'\nimport Signup from './components/auth/signup/Signup';\nimport {BrowserRouter, Routes, Route, Link, Navigate} from 'react-router-dom'\nimport Login from './components/auth/login/Login';\nimport Home from './components/home/Home'\nimport ListGroup from './components/listGroup/ListGroup';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n\n  const [token, setToken] = useState('');\n\n  // Initialize the isLoggedIn state as false (user is not logged in)\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(initializeToken, []);\n\n  function initializeToken() {\n    setToken(localStorage.token);\n    // console.log('TOKEN:', localStorage.token);\n\n    // Set the isLoggedIn state based on the presence of the token\n    setIsLoggedIn(!!localStorage.token);\n  }\n\n\n  function updateToken(newToken) {\n    setToken(newToken);\n    localStorage.token = newToken;\n\n    // Set the isLoggedIn state to true when a token is updated (user is logged in)\n    setIsLoggedIn(true);\n  }\n\n  function clearToken() {\n    setToken(''); // Clear the token when logging out\n    localStorage.removeItem('token'); // Remove the token from local storage\n\n    // Set the isLoggedIn state to false when the user logs out\n    setIsLoggedIn(false);\n  }\n\n  function initializeUser() {\n\n  }\n\n  function updateUser() {\n\n  }\n\n  function clearUser() {\n\n  }\n\n  return ( \n  \n \n\n\n\n    <BrowserRouter>\n   \n<Routes>\n<Route path='/Home' element = {<Home loggedIn={isLoggedIn} token = {token}  />} />\n<Route path='Signup' element = {<Signup setToken = {updateToken}  />} />\n<Route path='Login' element = {<Login setToken = {updateToken}/>} />\n<Route path='List' element = {<ListGroup setToken = {updateToken}/>} />\n</Routes>\n\n\n    </BrowserRouter>\n\n    \n  \n  );\n}\n\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}