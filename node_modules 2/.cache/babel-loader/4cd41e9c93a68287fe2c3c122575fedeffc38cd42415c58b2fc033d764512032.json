{"ast":null,"code":"var _jsxFileName = \"/Users/pks.ml/Desktop/GiftApp/gift.me/src/components/auth/login/Login.jsx\",\n  _s = $RefreshSig$();\n/*\nimport { useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { Flex, TextField, Button, IconButton } from '@radix-ui/themes';\nimport { DoubleArrowDownIcon } from '@radix-ui/react-icons'\n*/\nimport { React, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login(props) {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const loginRoute = \"http://localhost:4000/user/login\";\n  const navigate = useNavigate();\n  async function LoginInput(e) {\n    e.preventDefault();\n    console.log(\"testing this function\");\n    console.log(email);\n    console.log(password);\n    try {\n      let response = await fetch(loginRoute, {\n        headers: new Headers({\n          \"content-type\": \"application/json\"\n        }),\n        method: \"POST\",\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      });\n\n      // console.log(response);\n      let results = await response.json();\n      props.setToken(results.token);\n      if (response.status === 200) {\n        navigate(\"/Home\");\n      } else {\n        console.log(\"Login Missed\");\n      }\n    } catch (error) {}\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center h-screen bg-slate-500 \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-purple-100 font-mono text-3xl\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" GIFT.ME \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-md  bg-slate-700  rounded-xl shadow-md py-8 px-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \" text-[28px] font-bold text-purple-100 mb text-center  \",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: LoginInput,\n          className: \"flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"Email\",\n            className: \" bg-slate-600 text-white border-0 rounded-md p-2 mb-4 focus:bg-slate-500\\nfocus:outline-blue-200 transition ease-in-out duration-150 place-content-baseline placeholder-gray-300\",\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Password\",\n            className: \" bg-slate-600 text-white border-0 rounded-md p-2 mb-4 focus:bg-slate-500\\nfocus:outline-blue-200 transition ease-in-out duration-150 place-content-baseline placeholder-gray-300\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-gradient-to-r from-indigo-500 to-blue-500 text-white font-medium py-2 px-4 rounded-md hover:bg-indigo-600 hover:to-black transition ease-in duration-200\",\n            type: \"submit\",\n            children: [\" \", \"Submit\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white mt-4 text-center\",\n            children: [\" \", \"Don't Have Acccount?\", /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"text-white-500 hover:underline mt-4 px-1\",\n              onClick: () => navigate(\"/Signup\"),\n              href: \"#\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n  /* import { useState } from 'react'\n  import { Card, TextField, Button } from '@radix-ui/themes';\n  \n  function Login({ loginPane, setLoginPane, updateUser }) {\n  \n    const navigate = useNavigate();\n  \n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n  \n    async function processUserLogin(e) {\n      e.preventDefault();\n  \n      try {\n        let response = await fetch(\"http://localhost:4000/user/login\", {\n          headers: new Headers({\n            \"content-type\": \"application/json\",\n          }),\n          method: \"POST\",\n          body: JSON.stringify({\n            email,\n            password,\n          }),\n        });\n  \n        let results = await response.json();\n  \n        console.log(results);\n  \n        if (response.status === 200) {\n          updateUser(results.token, results.user._id);\n          setLoginPane(false);\n          navigate(\"#\");\n        }\n  \n      } catch (error) {\n        console.log(error);\n      };\n    };\n  \n    return (\n      <div\n        className={`test w-full h-full bg-gray-800/90 absolute border-solid border-2 rounded-lg text-white ${loginPane ? 'top-0 transition-all' : 'top-[calc(var(--auth-height))] transition-all'}`}\n      >\n        <Flex\n          width=\"100%\"\n          height=\"100%\"\n          direction=\"column\"\n          align=\"center\"\n          justify=\"center\"\n          gap=\"3\"\n          // className={`test bg-gray-800/90 absolute border-solid border-2 rounded-lg text-white ${loginPane ? 'top-0 transition-all' : 'top-[calc(var(--auth-height)/2)] transition-all' }`}\n        >\n          Email\n          <TextField.Root>\n            <TextField.Input\n              size=\"3\"\n              placeholder=\"Email\"\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n          </TextField.Root>\n          Password\n          <TextField.Root>\n            <TextField.Input\n              type=\"password\"\n              size=\"3\"\n              placeholder=\"Password\"\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n          </TextField.Root>\n          <Button\n            onClick={processUserLogin}\n          >\n            Login\n          </Button>\n        <Button\n          onClick={() => {\n            console.log(setLoginPane);\n            setLoginPane(false);\n          }}\n        >\n          <DoubleArrowDownIcon width=\"18\" height=\"18\" />\n        </Button>\n        </Flex>\n      </div>\n    )*/\n}\n_s(Login, \"rIjyA2uJXTJXGlQGcq/HSho2Mo8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","PropTypes","jsxDEV","_jsxDEV","Login","props","_s","email","setEmail","password","setPassword","loginRoute","navigate","LoginInput","e","preventDefault","console","log","response","fetch","headers","Headers","method","body","JSON","stringify","results","json","setToken","token","status","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","target","value","placeholder","type","onClick","href","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["/Users/pks.ml/Desktop/GiftApp/gift.me/src/components/auth/login/Login.jsx"],"sourcesContent":["/*\nimport { useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { Flex, TextField, Button, IconButton } from '@radix-ui/themes';\nimport { DoubleArrowDownIcon } from '@radix-ui/react-icons'\n*/\nimport { React, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport PropTypes from \"prop-types\";\n\nfunction Login(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const loginRoute = \"http://localhost:4000/user/login\";\n\n  const navigate = useNavigate();\n\n  async function LoginInput(e) {\n    e.preventDefault();\n    console.log(\"testing this function\");\n    console.log(email);\n    console.log(password);\n\n    try {\n      let response = await fetch(loginRoute, {\n        headers: new Headers({\n          \"content-type\": \"application/json\",\n        }),\n\n        method: \"POST\",\n        body: JSON.stringify({\n          email: email,\n          password: password,\n        }),\n      });\n\n      // console.log(response);\n      let results = await response.json();\n      props.setToken(results.token);\n\n      if (response.status === 200) {\n        navigate(\"/Home\");\n      } else {\n        console.log(\"Login Missed\");\n      }\n    } catch (error) {}\n  }\n\n  return (\n    <div>\n      <div className=\"flex flex-col items-center justify-center h-screen bg-slate-500 \">\n        <div className=\"text-purple-100 font-mono text-3xl\">\n          <h1> GIFT.ME </h1>\n        </div>\n        <div className=\"w-full max-w-md  bg-slate-700  rounded-xl shadow-md py-8 px-8\">\n          <h2 className=\" text-[28px] font-bold text-purple-100 mb text-center  \">\n            \n            Sign In\n          </h2>\n          <form onSubmit={LoginInput} className=\"flex flex-col\">\n            <input\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"Email\"\n              className=\" bg-slate-600 text-white border-0 rounded-md p-2 mb-4 focus:bg-slate-500\nfocus:outline-blue-200 transition ease-in-out duration-150 place-content-baseline placeholder-gray-300\"\n              type=\"email\"\n            />\n\n            <input\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Password\"\n              className=\" bg-slate-600 text-white border-0 rounded-md p-2 mb-4 focus:bg-slate-500\nfocus:outline-blue-200 transition ease-in-out duration-150 place-content-baseline placeholder-gray-300\"\n              type=\"password\"\n            />\n            <button\n              className=\"bg-gradient-to-r from-indigo-500 to-blue-500 text-white font-medium py-2 px-4 rounded-md hover:bg-indigo-600 hover:to-black transition ease-in duration-200\"\n              type=\"submit\"\n            >\n              {\" \"}\n              Submit{\" \"}\n            </button>\n            <p className=\"text-white mt-4 text-center\">\n              {\" \"}\n              Don't Have Acccount?\n              <a\n                className=\"text-white-500 hover:underline mt-4 px-1\"\n                onClick={() => navigate(\"/Signup\")}\n                href=\"#\"\n              >\n                \n                Sign Up\n              </a>\n            </p>\n          </form>\n\n          {/* \n        <h1  className='font-bold'> Hello </h1> */}\n        </div>\n      </div>\n    </div>\n  );\n/* import { useState } from 'react'\nimport { Card, TextField, Button } from '@radix-ui/themes';\n\nfunction Login({ loginPane, setLoginPane, updateUser }) {\n\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  async function processUserLogin(e) {\n    e.preventDefault();\n\n    try {\n      let response = await fetch(\"http://localhost:4000/user/login\", {\n        headers: new Headers({\n          \"content-type\": \"application/json\",\n        }),\n        method: \"POST\",\n        body: JSON.stringify({\n          email,\n          password,\n        }),\n      });\n\n      let results = await response.json();\n\n      console.log(results);\n\n      if (response.status === 200) {\n        updateUser(results.token, results.user._id);\n        setLoginPane(false);\n        navigate(\"#\");\n      }\n\n    } catch (error) {\n      console.log(error);\n    };\n  };\n\n  return (\n    <div\n      className={`test w-full h-full bg-gray-800/90 absolute border-solid border-2 rounded-lg text-white ${loginPane ? 'top-0 transition-all' : 'top-[calc(var(--auth-height))] transition-all'}`}\n    >\n      <Flex\n        width=\"100%\"\n        height=\"100%\"\n        direction=\"column\"\n        align=\"center\"\n        justify=\"center\"\n        gap=\"3\"\n        // className={`test bg-gray-800/90 absolute border-solid border-2 rounded-lg text-white ${loginPane ? 'top-0 transition-all' : 'top-[calc(var(--auth-height)/2)] transition-all' }`}\n      >\n        Email\n        <TextField.Root>\n          <TextField.Input\n            size=\"3\"\n            placeholder=\"Email\"\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n        </TextField.Root>\n        Password\n        <TextField.Root>\n          <TextField.Input\n            type=\"password\"\n            size=\"3\"\n            placeholder=\"Password\"\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n        </TextField.Root>\n        <Button\n          onClick={processUserLogin}\n        >\n          Login\n        </Button>\n      <Button\n        onClick={() => {\n          console.log(setLoginPane);\n          setLoginPane(false);\n        }}\n      >\n        <DoubleArrowDownIcon width=\"18\" height=\"18\" />\n      </Button>\n      </Flex>\n    </div>\n  )*/\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired,\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}